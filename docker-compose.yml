services:
  flask:
    build:
      context: .
      dockerfile: ./docker/local/flask.Dockerfile
    image: local:true_shuffle_flask_web
    ports:
      - 5000:5000
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_healthy
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    command: redis-server --requirepass $REDIS_PASSWORD
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 10
    networks:
      - app-network

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/celery.Dockerfile
    image: local:true_shuffle_celery_worker
    healthcheck:
      test: celery -A make_celery inspect ping
      interval: 1s
      timeout: 5s
      retries: 10
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: ./docker/local/nginx.Dockerfile
    volumes:
      - ./ssl:/ssl
    ports:
      - 80:80
      - 443:443
    depends_on:
      - flask
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge